# Generated by Django 5.1.2 on 2024-10-25 17:45

import django.contrib.auth.models
import django.contrib.auth.validators
import django.contrib.gis.db.models.fields
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Specialty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Cleaner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flexible_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('pet_friendly', models.BooleanField(default=False)),
                ('rating', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1.0), django.core.validators.MaxValueValidator(5.0)])),
                ('background_check', models.BooleanField(default=False)),
                ('bio_work_history', models.TextField(blank=True, max_length=1000)),
                ('profile_pic', models.ImageField(upload_to='profile_pics/')),
                ('location', django.contrib.gis.db.models.fields.PointField(geography=True, null=True, srid=4326)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('specialties', models.ManyToManyField(blank=True, related_name='cleaners', to='main.specialty')),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1.0), django.core.validators.MaxValueValidator(5.0)])),
                ('bio', models.TextField(blank=True, max_length=750)),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='profile_pics/')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Home',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('home_name', models.CharField(max_length=50)),
                ('country', models.CharField(max_length=50)),
                ('address_line_one', models.CharField(max_length=255)),
                ('address_line_two', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(max_length=50)),
                ('state', models.CharField(max_length=50)),
                ('zipcode', models.CharField(max_length=10)),
                ('size', models.CharField(max_length=50)),
                ('home_type', models.CharField(choices=[('apartment', 'Apartment'), ('house', 'House'), ('condo', 'Condo'), ('townhouse', 'Townhouse'), ('duplex', 'Duplex'), ('loft', 'Loft'), ('studio', 'Studio'), ('cottage', 'Cottage'), ('cabin', 'Cabin'), ('mobile_home', 'Mobile Home'), ('bungalow', 'Bungalow'), ('villa', 'Villa'), ('mansion', 'Mansion'), ('farmhouse', 'Farmhouse'), ('other', 'Other')], max_length=50)),
                ('bedrooms', models.CharField(max_length=2)),
                ('bathrooms', models.FloatField(max_length=3)),
                ('pets', models.JSONField(default=dict)),
                ('kids', models.CharField(max_length=2)),
                ('outdoor_image', models.ImageField(upload_to='home_images/')),
                ('special_instructions', models.TextField(blank=True, max_length=1000, null=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='homes', to='main.customer')),
            ],
        ),
        migrations.AddField(
            model_name='customer',
            name='default_home',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='default_for_customers', to='main.home'),
        ),
        migrations.CreateModel(
            name='Indoor_Home_Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='home_images/')),
                ('caption', models.CharField(blank=True, max_length=100, null=True)),
                ('home', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='main.home')),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('booked', 'Booked'), ('active', 'Active'), ('cancelled', 'Cancelled'), ('completed', 'Completed')], max_length=20)),
                ('date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('total_cost', models.DecimalField(decimal_places=2, max_digits=6)),
                ('payment_made', models.BooleanField(default=False)),
                ('special_requests', models.TextField(blank=True, max_length=500, null=True)),
                ('cleaner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='jobs', to='main.cleaner')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jobs', to='main.customer')),
                ('home', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jobs', to='main.home')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('preferred_name', models.CharField(blank=True, max_length=25, null=True)),
                ('role', models.CharField(choices=[('customer', 'Customer'), ('cleaner', 'Cleaner'), ('both', 'Both')], default='customer', max_length=10)),
                ('phone', models.CharField(max_length=25, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_phone_verified', models.BooleanField(default=False)),
                ('is_email_verified', models.BooleanField(default=False)),
                ('date_of_birth', models.DateField()),
                ('allergies', models.JSONField(default=list)),
                ('groups', models.ManyToManyField(blank=True, related_name='custom_user_set', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='custom_user_permission_set', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
